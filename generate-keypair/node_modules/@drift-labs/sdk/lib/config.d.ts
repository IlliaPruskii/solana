import { PerpMarketConfig } from './constants/perpMarkets';
import { SpotMarketConfig } from './constants/spotMarkets';
import { OracleInfo } from './oracles/types';
import { Program } from '@coral-xyz/anchor';
type DriftConfig = {
    ENV: DriftEnv;
    PYTH_ORACLE_MAPPING_ADDRESS: string;
    DRIFT_PROGRAM_ID: string;
    JIT_PROXY_PROGRAM_ID?: string;
    USDC_MINT_ADDRESS: string;
    SERUM_V3: string;
    PHOENIX: string;
    V2_ALPHA_TICKET_MINT_ADDRESS: string;
    PERP_MARKETS: PerpMarketConfig[];
    SPOT_MARKETS: SpotMarketConfig[];
    MARKET_LOOKUP_TABLE: string;
    SERUM_LOOKUP_TABLE?: string;
};
export type DriftEnv = 'devnet' | 'mainnet-beta';
export declare const DRIFT_PROGRAM_ID = "dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH";
export declare const configs: {
    [key in DriftEnv]: DriftConfig;
};
export declare const getConfig: () => DriftConfig;
/**
 * Allows customization of the SDK's environment and endpoints. You can pass individual settings to override the settings with your own presets.
 *
 * Defaults to master environment if you don't use this function.
 * @param props
 * @returns
 */
export declare const initialize: (props: {
    env: DriftEnv;
    overrideEnv?: Partial<DriftConfig>;
}) => DriftConfig;
export declare function getMarketsAndOraclesForSubscription(env: DriftEnv): {
    perpMarketIndexes: number[];
    spotMarketIndexes: number[];
    oracleInfos: OracleInfo[];
};
export declare function findAllMarketAndOracles(program: Program): Promise<{
    perpMarketIndexes: number[];
    spotMarketIndexes: number[];
    oracleInfos: OracleInfo[];
}>;
export {};
