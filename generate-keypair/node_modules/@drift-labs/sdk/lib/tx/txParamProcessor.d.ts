import { AddressLookupTableAccount, Connection, TransactionInstruction, TransactionVersion, VersionedTransaction } from '@solana/web3.js';
import { BaseTxParams, ProcessingTxParams } from '..';
type TransactionProps = {
    instructions: TransactionInstruction | TransactionInstruction[];
    txParams?: BaseTxParams;
    txVersion?: TransactionVersion;
    lookupTables?: AddressLookupTableAccount[];
    forceVersionedTransaction?: boolean;
};
/**
 * This class is responsible for running through a "processing" pipeline for a base transaction, to adjust the standard transaction parameters based on a given configuration.
 */
export declare class TransactionProcessor {
    private static getComputeUnitsFromSim;
    static getTxSimComputeUnits(tx: VersionedTransaction, connection: Connection): Promise<{
        success: boolean;
        computeUnits: number;
    }>;
    static process(props: {
        txProps: TransactionProps;
        txBuilder: (baseTransactionProps: TransactionProps) => Promise<VersionedTransaction>;
        processConfig: ProcessingTxParams;
        processParams: {
            connection: Connection;
        };
    }): Promise<BaseTxParams>;
}
export {};
